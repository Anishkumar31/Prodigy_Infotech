# -*- coding: utf-8 -*-
"""Prodigy_Trackcode_Task- 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wXRVdyS8jbCRvGI_6I7-pCEMjWrwCjYi
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the Titanic dataset
train_data = pd.read_csv('/content/tested.csv')
train_data

# Data Cleaning
train_data["Age"].fillna(train_data['Age'].median(), inplace=True)
train_data['Embarked'].fillna(train_data["Embarked"].mode()[0], inplace=True)
train_data.drop(["Cabin"], axis=1, inplace=True)
train_data.drop(["Name", "Ticket"], axis=1, inplace=True)
train_data["Sex"] = train_data['Sex'].map({'male': 0, 'female': 1})
train_data["Embarked"] = train_data["Embarked"].map({'C': 0, 'Q': 1, 'S': 2})

# EDA: Survival, Distribution
plt.figure(figsize=(12, 8))

plt.subplot(2, 3, 1)
sns.countplot(x='Survived', data=train_data)
plt.title('Survival Count')

# EDA: Gender Distribution and Survival Rate
plt.subplot(2, 3, 2)
sns.countplot(x='Sex', data=train_data)
plt.title('Gender Distribution')

plt.subplot(2, 3, 3)
sns.countplot(x='Survived', hue='Sex', data=train_data)
plt.title('Survival Count by Gender')

# EDA: Age Distribution
plt.subplot(2, 3, 4)
sns.histplot(train_data['Age'], bins=30, kde=True)
plt.title('Age Distribution')

# EDA: Passenger Class and Survival Rate
plt.subplot(2, 3, 5)
sns.countplot(x='Pclass', data=train_data)
plt.title('Passenger Class Distribution')

plt.subplot(2, 3, 6)
sns.countplot(x='Survived', hue='Pclass', data=train_data)
plt.title('Survival Count by Passenger Class')

plt.tight_layout()
plt.show()

# Correlation Heatmap
plt.figure(figsize=(16, 8))
corr_matrix = train_data.corr()
sns.heatmap(corr_matrix, annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap")
plt.show()

# Relationship Analysis: Age and Survival
plt.figure(figsize=(17, 6))

plt.subplot(1, 2, 1)
sns.boxplot(x="Survived", y="Age", data=train_data)
plt.title('Age Distribution by Survival')

# Relationship Analysis: Fare and Survival
plt.subplot(1, 2, 2)
sns.boxplot(x="Survived", y="Fare", data=train_data)
plt.title('Fare Distribution by Survival')

plt.tight_layout()
plt.show()