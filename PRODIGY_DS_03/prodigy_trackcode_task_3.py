# -*- coding: utf-8 -*-
"""Prodigy_Trackcode_Task-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tlvPU_mF983EaSDTmlGxl8X98BewUx8D
"""

import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
df =pd.read_csv('bank-additional/bank-additional-full.csv', sep=';')
df

#Encode categorical variables
label_encoders = {}
for column in df.select_dtypes (include=['object']).columns:
  label_encoders [column] = LabelEncoder()
  df [column] = label_encoders [column].fit_transform(df[column])

# Define features and target variable
X= df.drop(columns=['y'])
y = df['y']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test =train_test_split(X, y, test_size=0.3, random_state=42)
# Initialize the Decision Tree classifier
clf = DecisionTreeClassifier(random_state=42)

#Train the model
clf.fit(X_train, y_train)
#Make predictions on the test set
y_pred= clf.predict(X_test)

#Evaluate the model
accuracy =accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')
print(classification_report(y_test, y_pred))

# Plot confusion matrix
conf_matrix = confusion_matrix(y_test, y_pred)
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

# Visualize the decision tree
plt.figure(figsize=(20,10))
plot_tree(clf, feature_names=X.columns, class_names=['no', 'yes'], filled=True)
plt.title('Decision Tree')
plt.show()

